name: Docker CICD

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  cicd-linux-docker:
    name: CICD Linux for Docker
    runs-on: ubuntu-latest
    steps:
      - name: Checkout sources
        uses: actions/checkout@v2

      - name: Install nightly toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          profile: minimal
          override: true

      - name: Generate secret key
        run: head -c16 /dev/urandom > src/secret.key

      - name: Cache cargo registry
        uses: actions/cache@v1
        with:
          path: ~/.cargo/registry
          key: docker-registry-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-registry-
            docker-

      - name: Cache cargo index
        uses: actions/cache@v1
        with:
          path: ~/.cargo/git
          key: docker-index-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-index-
            docker-

      - name: Cache cargo build
        uses: actions/cache@v1
        with:
          path: target
          key: docker-build-${{ hashFiles('**/Cargo.lock') }}
          restore-keys: |
            docker-build-
            docker-

      - name: Run cargo build
        uses: actions-rs/cargo@v1
        with:
          command: build
          args: --release

      - name: Copy neccessary files and zip
        run: |
          mkdir app
          cp target/release/address_book_rest_api app/address_book_rest_api
          cp diesel.toml app/diesel.toml
          mv Rocket.toml.sample Rocket.toml
          cp Rocket.toml app/Rocket.toml
          cp docker/prod/Dockerfile app/Dockerfile
          cd app
          touch .env
          tar -czvf ../app.tar.gz .
          cd ..

      - name: Upload app archive for Docker job
        uses: actions/upload-artifact@v1
        with:
          name: artifact-linux-docker
          path: app.tar.gz


  cicd-docker:
    name: CICD Docker
    runs-on: ubuntu-latest
    needs: cicd-linux-docker
    steps:
      - name: Download app archive
        uses: actions/download-artifact@v2
        with:
          name: artifact-linux-docker

      - name: Extract app archive
        run: tar -zxvf app.tar.gz

      - name: Docker build and publish
        uses: docker/build-push-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
          repository: sakadream/rocket-rest-api-with-jwt
          add_git_labels: true
          tag_with_ref: true
